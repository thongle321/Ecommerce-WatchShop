@model IEnumerable<Ecommerce_WatchShop.Models.ViewModels.CartRequest>
@using System.Globalization
@{
    ViewData["Title"] = "Giỏ hàng";
}
   <!-- ...:::: Start Breadcrumb Section:::... -->
<div class="breadcrumb-section breadcrumb-bg-color--golden">
    <div class="breadcrumb-wrapper">
        <div class="container">
            <div class="row">
                <div class="col-12">
                    <h3 class="breadcrumb-title">Giỏ hàng</h3>
                    <div class="breadcrumb-nav breadcrumb-nav-color--black breadcrumb-nav-hover-color--golden">
                        <nav aria-label="breadcrumb">
                            <ul>
                                <li><a asp-controller="Home" asp-action="index">Trang Chủ</a></li>
                                <li class="active" aria-current="page">Giỏ Hàng</li>
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div> <!-- ...:::: End Breadcrumb Section:::... -->
<!-- ...:::: Start Cart Section:::... -->
<div class="cart-section">
    <!-- Start Cart Table -->
    <div class="cart-table-wrapper" data-aos="fade-up" data-aos-delay="0">
        <div class="container">
            <div class="row">
                <div class="col-12">
                    <div class="table_desc">
                        <div class="table_page table-responsive">
                            <table>
                                <!-- Start Cart Table Head -->
                                <thead>
                                    <tr>
                                        <th class="product_thumb">Hình ảnh</th>
                                        <th class="product_name">Sản phẩm</th>
                                        <th class="product-price">Giá</th>
                                        <th class="product_quantity">Số lượng</th>
                                        <th class="product_total">Tổng tiền</th>
                                        <th class="product_remove"></th>
                                    </tr>
                                </thead> <!-- End Cart Table Head -->
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                        <tr data-product-slug="@item.Slug">
                                            <td class="product_thumb">
                                                <a href="@Url.Action("ProductDetail", "Product", new { slug = item.Slug })">
                                                    <img src="~/images/@item.Image" alt="@item.ProductName">
                                                </a>
                                            </td>
                                            <td class="product_name">
                                                <a href="@Url.Action("ProductDetail", "Product", new { slug = item.Slug })">
                                                    @item.ProductName
                                                </a>
                                            </td>
                                            <td class="product-price item-price">@String.Format(new CultureInfo("vi-VN"), "{0:C}", item.Price)</td>
                                            <td class="product_quantity">
                                                <input type="number" class="quantity-input" data-slug="@item.Slug" value="@item.Quantity" min="1" onchange="updateQuantity(this)" />
                                            </td>
                                            <td class="product_total">

                                                <span id="item-total-price">@String.Format(new CultureInfo("vi-VN"), "{0:C}", (@item.Price * item.Quantity))</span>
                                            </td>
                                            <td class="product_remove">
                                                <form asp-controller="Cart" asp-action="RemoveCartItem" asp-route-slug="@item.Slug">
                                                    <button class="remove-item-btn" @* data-product-id="@item.ProductId"  *@ type="submit">
                                                        <i class="fa fa-trash-o"></i>
                                                    </button>
                                                </form>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                            @if (ViewBag.TotalPages > 1)
                            {
                                <div class="page-pagination text-center" data-aos="fade-up" data-aos-delay="0">
                                    <ul>
                                        <!-- Link trang trước -->
                                        @if (ViewBag.CurrentPage > 1)
                                        {
                                            <li>
                                                <a href="@Url.Action("Cart", new { page = ViewBag.CurrentPage - 1 })">&laquo; Trước</a>
                                            </li>
                                        }

                                        <!-- Link các trang -->
                                        @for (int i = 1; i <= ViewBag.TotalPages; i++)
                                        {
                                            <li class="@(i == ViewBag.CurrentPage ? "active" : "")">
                                                <a href="@Url.Action("Cart", new { page = i })">@i</a>
                                            </li>
                                        }

                                        <!-- Link trang sau -->
                                        @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                                        {
                                            <li>
                                                <a href="@Url.Action("Cart", new { page = ViewBag.CurrentPage + 1 })">Sau &raquo;</a>
                                            </li>
                                        }
                                    </ul>
                                </div>
                            }
                        </div>
                        <form asp-controller="Cart" asp-action="ClearCart">
                        <div class="cart_submit">
                           
                            <button class="btn btn-md btn-golden" id="clear-cart-btn" type="submit">Xóa giỏ hàng</button>
                        </div>
                        </form>

                    </div>
                </div>
            </div>
        </div>
    </div> <!-- End Cart Table -->
    @{
        double cartTotal = 0;
    foreach (var item in Model)
        {
            cartTotal += (double)(item.Quantity * item.Price); // Tính tổng
        }
    }
    <!-- Start Coupon Start -->
    <div class="coupon_area d-flex justify-content-end">
        <div class="col-lg-5" style="margin-right: 5.1rem">
            <div class="coupon_code" data-aos="fade-up" data-aos-delay="400">
                <h3>Cart Totals</h3>
                <div class="coupon_inner">
                    <div class="cart_subtotal">
                        <p>Tạm tính</p>
                        <p class="cart_amount" id="cart-subtotal">@String.Format(new CultureInfo("vi-VN"), "{0:C}", cartTotal)</p>
                    </div>
                    <div class="cart_subtotal">
                        <p>Tổng</p>
                        <p class="cart_amount" id="cart-final-total">@String.Format(new CultureInfo("vi-VN"), "{0:C}", cartTotal)</p>
                    </div>
                    <div class="checkout_btn">
                        <a asp-controller="Checkout" asp-action="Index" class="btn btn-md btn-golden">Mua hàng</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- End Coupon Start -->
</div> <!-- ...:::: End Cart Section:::... -->


@* <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
        $(document).ready(function () {
        $('.product_quantity input').on('change', function () {
            var newQuantity = $(this).val();
            var productId = $(this).closest('tr').data('product-id');

            $.ajax({
                url: '@Url.Action("UpdateCart", "Cart")',
                method: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({
                    ProductId: productId,
                    Quantity: parseInt(newQuantity)
                }),
                success: function (response) {
                    alert(response.message);
                    location.reload(); // Reload để cập nhật lại tổng tiền
                },
                error: function (xhr) {
                    var errorMessage = "Đã có lỗi xảy ra.";
                    if (xhr.responseJSON && xhr.responseJSON.message) {
                        errorMessage = xhr.responseJSON.message;
                    }
                    alert(errorMessage); // Hiển thị thông báo lỗi
                }
            });
        });
    });

</script>
<script>
    $(document).ready(function () {
        $('#clear-cart-btn').on('click', function () {
            if (confirm('Bạn có chắc chắn muốn xóa toàn bộ giỏ hàng?')) {
                $.ajax({
                    url: '@Url.Action("ClearCart", "Cart")',
                    method: 'POST',
                    success: function (response) {
                        alert(response.message);
                        if (response.success) {
                            location.reload(); // Tải lại trang để cập nhật giỏ hàng
                        }
                    },
                    error: function () {
                        alert("Đã xảy ra lỗi khi xóa giỏ hàng.");
                    }
                });
            }
        });
    });
</script>
<script>
    $(document).ready(function () {
        $('.remove-item-btn').on('click', function () {
            var productId = $(this).data('product-id');

            // Hiển thị hộp thoại xác nhận trước khi xóa
            if (confirm('Bạn có chắc chắn muốn xóa sản phẩm này khỏi giỏ hàng?')) {
                $.ajax({
                    url: '@Url.Action("RemoveItem", "Cart")',
                    method: 'POST',
                    data: { productId: productId },
                    success: function (response) {
                        alert(response.message);
                        if (response.success) {
                            location.reload(); // Tải lại trang để cập nhật giỏ hàng
                        }
                    },
                    error: function () {
                        alert("Đã xảy ra lỗi khi xóa sản phẩm khỏi giỏ hàng.");
                    }
                });
            }
        });
    });
</script>
 *@

@section Scripts {
    <script>
        function updateQuantity(input) {
            var slug = $(input).data('slug');
            var quantity = parseInt($(input).val());

            var priceStr = $(input).closest('tr').find('.item-price').text().trim();
            var price = parseFloat(priceStr.replace(/[^0-9]/g, ''));

            $.ajax({
                url: "@Url.Action("UpdateCart", "Cart")",
                type: 'POST',
                data: {
                    slug: slug,
                    quantity: quantity
                },
                success: function(response) {
                    if (response.success) {
                        var itemTotal = price * quantity;

                        var formattedItemTotal = new Intl.NumberFormat('vi-VN', {
                            style: 'currency',
                            currency: 'VND'
                        }).format(itemTotal);

                        $(input).closest('tr').find('#item-total-price').text(formattedItemTotal);

                        var cartTotal = 0;
                        $('#item-total-price').each(function() {
                            var itemTotalStr = $(this).text().trim();
                            cartTotal += parseFloat(itemTotalStr.replace(/[^0-9]/g, ''));
                        });

                        var formattedCartTotal = new Intl.NumberFormat('vi-VN', {
                            style: 'currency',
                            currency: 'VND'
                        }).format(cartTotal);

                        $('#cart-subtotal').text(formattedCartTotal);
                        $('#cart-final-total').text(formattedCartTotal);

                    } else {
                        Swal.fire({
                        title: 'Lỗi!',
                        text: response.message,
                        icon: 'error',
                        confirmButtonText: 'OK',
                        }).then(() => {
                            if (response.originalQuantity !== undefined) {
                                $(input).val(response.originalQuantity);
                            }
                        });
                    }
                },
                error: function(xhr, status, error) {
                    console.error(error);
                    $(input).val($(input).attr('value'));
                }
            });
        }
    </script>
}