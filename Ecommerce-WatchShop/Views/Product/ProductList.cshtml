@{
    ViewData["Title"] = "Sản phẩm";
}
@model Ecommerce_WatchShop.Models.ViewModels.PagedProductListVM
@using System.Globalization
<!-- ...:::: Start Breadcrumb Section:::... -->
<div class="breadcrumb-section breadcrumb-bg-color--golden">
    <div class="breadcrumb-wrapper">
        <div class="container">
            <div class="row">
                <div class="col-12">
                    <h3 class="breadcrumb-title">Sản Phẩm</h3>
                    <div class="breadcrumb-nav breadcrumb-nav-color--black breadcrumb-nav-hover-color--golden">
                        <nav aria-label="breadcrumb">
                            <ul>
                                <li><a asp-controller="Home" asp-action="Index">Trang Chủ</a></li>
                                <li class="active" aria-current="page">Sản Phẩm</li>
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div> <!-- ...:::: End Breadcrumb Section:::... -->
<!-- ...:::: Start Shop Section:::... -->
<div class="shop-section">
    <div class="container">
        <div class="row flex-column-reverse flex-lg-row">
            <div class="col-lg-3">
                <form method="get" asp-controller="Product" asp-action="ProductList">
                    <div class="sidebar-single-widget">
                        <h6 class="sidebar-title">Tìm kiếm</h6>
                        <div class="default-search-style d-flex">
                             @* <form method="get" asp-controller="Product" asp-action="ProductList">  *@
                                <input class="default-search-style-input-box" type="search" placeholder="Tìm kiếm..." name="search">
                                <button class="default-search-style-input-btn" type="submit"><i class="fa fa-search"></i></button>
                             @* </form>  *@

                        </div>
                    </div>
                    @await Component.InvokeAsync("MenuCategory")

                    <div class="sidebar-single-widget">
                        <h6 class="sidebar-title">LỌC THEO GIÁ</h6>
                        <div class="sidebar-content">
                            <div id="slider-range" class="ui-slider ui-corner-all ui-slider-horizontal ui-widget ui-widget-content">
                                <div class="ui-slider-range ui-corner-all ui-widget-header" style="left: 15%; width: 45%;">
                                </div>
                                <span tabindex="0" class="ui-slider-handle ui-corner-all ui-state-default" style="left: 15%;">
                                </span><span tabindex="0" class="ui-slider-handle ui-corner-all ui-state-default" style="left: 60%;"></span>
                            </div>
                            <div class="filter-type-price">
                                <label for="amount">Phạm vi:</label>
                                <input type="text" id="amount">
                            </div>
                        </div>
                    </div>
                    @await Component.InvokeAsync("MenuBrand")

                    <div>
                    </div>
                    <button type="submit" class="btn btn-md btn-golden mt-3">Lọc</button>

                </form>

                @*                 <div class="sidebar-single-widget">
                    <h6 class="sidebar-title">Thương Hiệu</h6>
                    <div class="sidebar-content">
                        <div class="filter-type-select">
                            <ul>
                                <li>
                                    <label class="checkbox-default" for="brakeParts">
                                        <input type="checkbox" id="brakeParts">
                                        <span>Rolex</span>
                                    </label>
                                </li>
                                <li>
                                    <label class="checkbox-default" for="accessories">
                                        <input type="checkbox" id="accessories">
                                        <span>Hublot</span>
                                    </label>
                                </li>
                                <li>
                                    <label class="checkbox-default" for="EngineParts">
                                        <input type="checkbox" id="EngineParts">
                                        <span>Curnon</span>
                                    </label>
                                </li>
                                <li>
                                    <label class="checkbox-default" for="hermes">
                                        <input type="checkbox" id="hermes">
                                        <span>Omega</span>
                                    </label>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div> <!-- End Single Sidebar Widget --> *@
            </div> <!-- End Sidebar Area -->
            <div class="col-lg-9">
                <!-- Start Shop Product Sorting Section -->
                <div class="shop-sort-section">
                    <div class="container">
                        <div class="row">
                            <!-- Start Sort Wrapper Box -->
                            <div class="sort-box d-flex justify-content-between align-items-md-center align-items-start flex-md-row flex-column"
                                 data-aos="fade-up" data-aos-delay="0">
                                <!-- Start Sort tab Button -->
                            </div> <!-- Start Sort Wrapper Box -->
                        </div>
                    </div>
                </div> <!-- End Section Content -->
                <!-- Start Tab Wrapper -->
                <div class="sort-product-tab-wrapper">
                    <div class="container">
                        <div class="row">
                            <div class="col-12">
                                <div class="tab-content tab-animate-zoom">
                                    <!-- Start List View Product -->
                                    <div class="tab-pane active show sort-layout-single" id="layout-list">
                                        <div class="row">
                                            @foreach (var item in Model.Products)
                                            {
                                                <div class="col-12">
                                                    <!-- Start Product Defautlt Single -->
                                                    <div class="product-list-single product-color--golden"
                                                         data-aos="fade-up" data-aos-delay="0">
                                                        <a asp-controller="product" asp-action="productdetail"
                                                           class="product-list-img-link">
                                                            <img class="img-fluid" src="@Url.Content("~/Images/" + item.Image)"
                                                                 alt="" style="width: 400px; height: 300px; object-fit: cover">
                                                        </a>
                                                        <div class="product-list-content">
                                                            <h5 class="product-list-link">
                                                                <a>
                                                                    @item.ProductName
                                                                </a>
                                                            </h5>
                                                            <ul class="review-star">
                                                                @{
                                                                    bool hasHalfStar = (item.ProductRating - (int)item.ProductRating) >= 0.4;

                                                                }
                                                                @if (item.ProductRating == 0)
                                                                {
                                                                    for (int i = 1; i <= 5; i++)
                                                                    {
                                                                        <li class="fill"><i class="ion-android-star"></i></li>
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    @for (int i = 1; i <= (int)item.ProductRating; i++)
                                                                    {
                                                                        <li class="fill"><i class="ion-android-star"></i></li>
                                                                    }

                                                                    {
                                                                        if ((int)item.ProductRating < 5)
                                                                        {
                                                                            if (hasHalfStar)
                                                                            {
                                                                                <li class="half" style="color: #b19361"><i class="ion-android-star-half"></i></li>
                                                                            }
                                                                        }
                                                                    }
                                                                    for (int i = (int)item.ProductRating + (hasHalfStar ? 1 : 0); i < 5; i++)
                                                                    {
                                                                        <li class="empty"><i class="ion-android-star"></i></li>
                                                                    }
                                                                }
                                                                @*                                                                 <li class="fill"><i class="ion-android-star"></i></li>
                                                                <li class="fill"><i class="ion-android-star"></i></li>
                                                                <li class="fill"><i class="ion-android-star"></i></li>
                                                                <li class="fill"><i class="ion-android-star"></i></li>
                                                                <li class="empty"><i class="ion-android-star"></i></li> *@
                                                            </ul>
                                                            <span class="product-list-price">
                                                                @String.Format(new CultureInfo("vi-VN"), "{0:C}", item.Price)
                                                            </span>
                                                            <p>
                                                                @item.ShortDescription
                                                            </p>
                                                            <div class="product-action-icon-link-list">
                                                                <a asp-controller="Cart" asp-action="Cart" data-bs-toggle="modal"
                                                                   data-bs-target="#modalAddcart"
                                                                   class="btn btn-lg btn-black-default-hover">
                                                                    Thêm vào giỏ
                                                                </a>
                                                            </div>
                                                        </div>
                                                    </div> <!-- End Product Defautlt Single -->
                                                </div>
                                            }
                                        </div>
                                        <!-- End List View Product -->
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div> <!-- End Tab Wrapper -->
                    <!-- Start Pagination -->
                    <div class="page-pagination text-center" data-aos="fade-up" data-aos-delay="0">
                        <ul>
                            <!-- Liên kết trang trước -->
                            @if (Model.CurrentPage > 1)
                            {
                                <li><a href="@Url.Action("ProductList", new { page = Model.CurrentPage - 1 })">&laquo; Trước</a></li>
                            }

                            <!-- Liên kết các trang -->
                            @for (int i = 1; i <= Model.TotalPages; i++)
                            {
                                <li class="@(i == Model.CurrentPage ? "active" : "")">
                                    <a href="@Url.Action("ProductList", new { page = i })">@i</a>
                                </li>
                            }

                            <!-- Liên kết trang sau -->
                            @if (Model.CurrentPage < Model.TotalPages)
                            {
                                <li><a href="@Url.Action("ProductList", new { page = Model.CurrentPage + 1 })">Sau &raquo;</a></li>
                            }
                        </ul>
                    </div> <!-- End Pagination -->
                </div> <!-- End Shop Product Sorting Section  -->
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.min.js"></script>
    <script>
        // Cấu hình slider mặc định
        const sliderConfig = {
            min: 0,
            max: 100000000,
            step: 1000, // Bước giá trị (1,000 VND)
            defaultValues: [0, 100000000]
        };

        // Đợi trang load xong
        window.addEventListener('load', function () {
            if (typeof $.ui !== 'undefined') {
                initializeSlider();
            } else {
                console.error("jQuery UI không được tải thành công.");
            }
        });

        // Khởi tạo slider
        function initializeSlider() {
            try {
                $("#slider-range").slider({
                    range: true,
                    min: sliderConfig.min,
                    max: sliderConfig.max,
                    step: sliderConfig.step,
                    values: sliderConfig.defaultValues,
                    slide: function (event, ui) {
                        updateAmountDisplay(ui.values[0], ui.values[1]);
                    },
                    stop: function (event, ui) {
                        updateProductList(ui.values[0], ui.values[1]);
                    }
                });

                // Hiển thị giá trị khởi tạo
                const values = $("#slider-range").slider("values");
                updateAmountDisplay(values[0], values[1]);
            } catch (error) {
                console.error("Lỗi khi khởi tạo slider:", error);
            }
        }

        // Cập nhật giá trị hiển thị
        function updateAmountDisplay(minPrice, maxPrice) {
            $("#amount").val(formatCurrency(minPrice) + " - " + formatCurrency(maxPrice));
        }

        // Cập nhật danh sách sản phẩm theo URL mới
        function updateProductList(minPrice, maxPrice) {
            const urlParams = new URLSearchParams(window.location.search);
            const category = urlParams.get('categories') || '';
            const brand = urlParams.get('brand') || '';

            const newUrl = `/Product/ProductList?categories=${encodeURIComponent(category)}&brand=${encodeURIComponent(brand)}&minPrice=${minPrice}&maxPrice=${maxPrice}`;
            window.location.href = newUrl;
        }

        // Định dạng giá trị thành tiền tệ
        function formatCurrency(value) {
            return new Intl.NumberFormat('vi-VN', {
                style: 'currency',
                currency: 'VND'
            }).format(value);
        }
    </script>
}
